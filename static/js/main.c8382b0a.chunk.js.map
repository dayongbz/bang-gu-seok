{"version":3,"sources":["component/WeatherCard.jsx","component/WeatherMain.jsx","component/xyConv.js","component/Weather.jsx","App.jsx","index.js"],"names":["WeatherCard","weather","useEffect","id","className","item","filter","category","obsrValue","dong","baseTime","substring","date","WeatherMain","score","length","reduce","a","b","toFixed","RE","GRID","SLAT1","SLAT2","OLON","OLAT","XO","YO","Weather","useState","position","setPosition","time","setTime","setWeather","weatherAxios","setWeatherAxios","setScore","getPostion","lat","long","axios","get","headers","then","data","latitude","longitude","results","region","area3","name","window","localStorage","setItem","JSON","stringify","navigator","geolocation","getCurrentPosition","p","getItem","parse","coords","error","setInterval","moment","tz","format","hour","minute","seconds","ampm","getWeather","timeBase","v1","v2","DEGRAD","Math","PI","re","slat1","slat2","olon","olat","sn","tan","log","cos","sf","pow","ro","rs","lng","ra","theta","x","floor","sin","y","xyConv","response","body","items","catch","baseDate","scoreAll","abs","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8382b0a.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function WeatherCard({ weather }) {\n  useEffect(() => {}, [weather]);\n  return (\n    <div id=\"weatherCardWrap\">\n      <p>현재 날씨</p>\n      <div id=\"weatherCardMain\">\n        <div className=\"weatherCard\">\n          <p className=\"title\">기온</p>\n          <p className=\"details\">\n            {weather &&\n              weather.item.filter(item => item.category === 'T1H')[0]\n                .obsrValue < 900 &&\n              weather.item.filter(item => item.category === 'T1H')[0]\n                .obsrValue > -900 &&\n              `${\n                weather.item.filter(item => item.category === 'T1H')[0]\n                  .obsrValue\n              } ℃`}\n            {weather ? '' : <span className=\"loading\">로딩중</span>}\n            {weather &&\n              (weather.item.filter(item => item.category === 'T1H')[0]\n                .obsrValue >= 900 ||\n                weather.item.filter(item => item.category === 'T1H')[0]\n                  .obsrValue <= -900) &&\n              '관측실패'}\n          </p>\n        </div>\n        <div className=\"weatherCard\">\n          <p className=\"title\">비오나?눈오나?</p>\n          <p className=\"details\">\n            {weather &&\n              (weather.item.filter(item => item.category === 'PTY')[0]\n                .obsrValue >= 900 ||\n                weather.item.filter(item => item.category === 'PTY')[0]\n                  .obsrValue <= -900) &&\n              '관측실패'}\n            {weather ? '' : <span className=\"loading\">로딩중</span>}\n            {weather &&\n              weather.item.filter(item => item.category === 'PTY')[0]\n                .obsrValue === 0 &&\n              '에잇! 안오네...'}\n            {weather &&\n              weather.item.filter(item => item.category === 'PTY')[0]\n                .obsrValue === 1 &&\n              '나이스! 비온다!'}\n            {weather &&\n              weather.item.filter(item => item.category === 'PTY')[0]\n                .obsrValue === 2 &&\n              '우와~ 비랑 눈 둘다!'}\n            {weather &&\n              weather.item.filter(item => item.category === 'PTY')[0]\n                .obsrValue === 3 &&\n              '나이스! 눈온다!'}\n            {weather &&\n              weather.item.filter(item => item.category === 'PTY')[0]\n                .obsrValue === 4 &&\n              '오! 소나기다!'}\n          </p>\n        </div>\n        <div className=\"weatherCard\">\n          <p className=\"title\">습도</p>\n          <p className=\"details\">\n            {weather &&\n              weather.item.filter(item => item.category === 'REH')[0]\n                .obsrValue < 900 &&\n              weather.item.filter(item => item.category === 'REH')[0]\n                .obsrValue > -900 &&\n              `${\n                weather.item.filter(item => item.category === 'REH')[0]\n                  .obsrValue\n              } %`}\n\n            {weather ? '' : <span className=\"loading\">로딩중</span>}\n            {weather &&\n              (weather.item.filter(item => item.category === 'REH')[0]\n                .obsrValue >= 900 ||\n                weather.item.filter(item => item.category === 'REH')[0]\n                  .obsrValue <= -900) &&\n              '관측실패'}\n          </p>\n        </div>\n        <div className=\"weatherCard\">\n          <p className=\"title\">풍속</p>\n          <p className=\"details\">\n            {weather &&\n              weather.item.filter(item => item.category === 'WSD')[0]\n                .obsrValue < 900 &&\n              weather.item.filter(item => item.category === 'WSD')[0]\n                .obsrValue > -900 &&\n              `${\n                weather.item.filter(item => item.category === 'WSD')[0]\n                  .obsrValue\n              } m/s`}\n\n            {weather ? '' : <span className=\"loading\">로딩중</span>}\n            {weather &&\n              (weather.item.filter(item => item.category === 'WSD')[0]\n                .obsrValue >= 900 ||\n                weather.item.filter(item => item.category === 'WSD')[0]\n                  .obsrValue <= -900) &&\n              '관측실패'}\n          </p>\n        </div>\n        <div className=\"weatherCard\">\n          <p className=\"title\">지역기준</p>\n          <p className=\"details\">\n            {weather ? '' : <span className=\"loading\">로딩중</span>}\n            {weather && weather.dong}\n          </p>\n        </div>\n        <div className=\"weatherCard\">\n          <p className=\"title\">날짜기준</p>\n          <p className=\"details\">\n            {weather ? '' : <span className=\"loading\">로딩중</span>}\n            {weather && `${`${weather.item[0].baseTime}`.substring(0, 2)} 시`}\n            {weather && <span className=\"small\">{weather.date}</span>}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nWeatherCard.propTypes = {\n  weather: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function WeatherMain({ weather, score }) {\n  return (\n    <div id=\"weatherMain\">\n      <p>\n        오늘의 날씨의 점수는\n        <span className=\"bold\">\n          {score && score.length !== 0\n            ? (score.reduce((a, b) => a + b) / 3).toFixed(2)\n            : '00.00'}\n        </span>\n        점 입니다!\n      </p>\n    </div>\n  );\n}\n\nWeatherMain.propTypes = {\n  weather: PropTypes.object,\n  score: PropTypes.array,\n};\n","const RE = 6371.00877; // 지구 반경(km)\nconst GRID = 5.0; // 격자 간격(km)\nconst SLAT1 = 30.0; // 투영 위도1(degree)\nconst SLAT2 = 60.0; // 투영 위도2(degree)\nconst OLON = 126.0; // 기준점 경도(degree)\nconst OLAT = 38.0; // 기준점 위도(degree)\nconst XO = 43; // 기준점 X좌표(GRID)\nconst YO = 136; // 기준점 Y좌표(GRID)\n\nexport default function xyConv(v1, v2) {\n  const DEGRAD = Math.PI / 180.0;\n\n  const re = RE / GRID;\n  const slat1 = SLAT1 * DEGRAD;\n  const slat2 = SLAT2 * DEGRAD;\n  const olon = OLON * DEGRAD;\n  const olat = OLAT * DEGRAD;\n\n  let sn =\n    Math.tan(Math.PI * 0.25 + slat2 * 0.5) /\n    Math.tan(Math.PI * 0.25 + slat1 * 0.5);\n  sn = Math.log(Math.cos(slat1) / Math.cos(slat2)) / Math.log(sn);\n  let sf = Math.tan(Math.PI * 0.25 + slat1 * 0.5);\n  sf = (Math.pow(sf, sn) * Math.cos(slat1)) / sn;\n  let ro = Math.tan(Math.PI * 0.25 + olat * 0.5);\n  ro = (re * sf) / Math.pow(ro, sn);\n  const rs = {};\n  rs.lat = v1;\n  rs.lng = v2;\n  let ra = Math.tan(Math.PI * 0.25 + v1 * DEGRAD * 0.5);\n  ra = (re * sf) / Math.pow(ra, sn);\n  let theta = v2 * DEGRAD - olon;\n  if (theta > Math.PI) theta -= 2.0 * Math.PI;\n  if (theta < -Math.PI) theta += 2.0 * Math.PI;\n  theta *= sn;\n  rs.x = Math.floor(ra * Math.sin(theta) + XO + 0.5);\n  rs.y = Math.floor(ro - ra * Math.cos(theta) + YO + 0.5);\n  return rs;\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport WeatherCard from './WeatherCard';\nimport WeatherMain from './WeatherMain';\nimport xyConv from './xyConv';\n\nexport default function Weather() {\n  const [position, setPosition] = useState();\n  const [time, setTime] = useState();\n  const [weather, setWeather] = useState();\n  const [weatherAxios, setWeatherAxios] = useState(true);\n  const [score, setScore] = useState([]);\n\n  // 위치 가져오기\n  useEffect(() => {\n    function getPostion(lat, long) {\n      axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/https://naveropenapi.apigw.ntruss.com/map-reversegeocode/v2/gc?request=coordsToaddr&coords=${long.toFixed(\n            4,\n          )},${+lat.toFixed(4)}&orders=admcode&output=json`,\n          {\n            headers: {\n              'X-NCP-APIGW-API-KEY-ID': 'y6syzp2el8',\n              'X-NCP-APIGW-API-KEY': 'oGUQ22oSWOEDf44apBf9QSZVKanLLauMgr5CnBDy',\n            },\n          },\n        )\n        .then(data => {\n          setPosition({\n            latitude: +lat.toFixed(4),\n            longitude: +long.toFixed(4),\n            dong: data.data.results[0].region.area3.name,\n          });\n          window.localStorage.setItem(\n            'position',\n            JSON.stringify({\n              latitude: +lat.toFixed(4),\n              longitude: +long.toFixed(4),\n              dong: data.data.results[0].region.area3.name,\n            }),\n          );\n        });\n    }\n    navigator.geolocation.getCurrentPosition(\n      p => {\n        if (!window.localStorage.getItem('position')) {\n          getPostion(p.coords.latitude, p.coords.longitude);\n        } else {\n          setPosition(JSON.parse(window.localStorage.getItem('position')));\n        }\n      },\n      error => {\n        if (!window.localStorage.getItem('position')) {\n          getPostion(37.645050399999995, 126.786284);\n        } else {\n          setPosition(JSON.parse(window.localStorage.getItem('position')));\n        }\n      },\n    );\n    setInterval(() => {\n      setTime({\n        date: moment.tz('Asia/Seoul').format('YYYY.MM.DD'),\n        hour: moment.tz('Asia/Seoul').format('hh'),\n        minute: moment.tz('Asia/Seoul').format('mm'),\n        seconds: moment.tz('Asia/Seoul').format('ss'),\n        ampm: moment.tz('Asia/Seoul').format('A'),\n      });\n    }, 300);\n  }, []);\n\n  // 날씨 가져오기\n  useEffect(() => {\n    function getWeather() {\n      setWeatherAxios(false);\n      const { x, y } = xyConv(position.latitude, position.longitude);\n      let timeBase;\n      if (+moment.tz('Asia/Seoul').format('mm') >= 40) {\n        timeBase = moment.tz('Asia/Seoul').format('HH00');\n      } else if (+moment.tz('Asia/Seoul').format('HH') < 11) {\n        timeBase = `0${+moment.tz('Asia/Seoul').format('HH00') - 100}`;\n      } else {\n        timeBase = `${+moment.tz('Asia/Seoul').format('HH00') - 100}`;\n      }\n      axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/http://newsky2.kma.go.kr/service/SecndSrtpdFrcstInfoService2/ForecastGrib?ServiceKey=j%2BeCKcismlZK%2BpaFNLrSPqSvTKVFFiiUqzXfxIXmNPl%2F4dWUGjlDL9wjnnAVFfGUGfJMK62lqnYwqLQe4r88fA%3D%3D&base_date=${moment\n            .tz('Asia/Seoul')\n            .format(\n              'YYYYMMDD',\n            )}&base_time=${timeBase}&nx=${x}&ny=${y}&_type=json`,\n        )\n        .then(data => {\n          setWeather({\n            time: moment.tz('Asia/Seoul').format('HHmm'),\n            date: moment.tz('Asia/Seoul').format('YYYYMMDD'),\n            item: data.data.response.body.items.item,\n            dong: position.dong,\n          });\n          window.localStorage.setItem(\n            'weather',\n            JSON.stringify({\n              time: moment.tz('Asia/Seoul').format('HHmm'),\n              date: moment.tz('Asia/Seoul').format('YYYYMMDD'),\n              item: data.data.response.body.items.item,\n              dong: position.dong,\n            }),\n          );\n          setWeatherAxios(true);\n        })\n        .catch(error => {\n          setWeatherAxios(true);\n        });\n    }\n\n    if (position && weatherAxios) {\n      if (!window.localStorage.getItem('weather')) {\n        getWeather();\n      } else if (!weather) {\n        setWeather(JSON.parse(window.localStorage.getItem('weather')));\n      }\n\n      if (weather && position) {\n        if (\n          +moment.tz('Asia/Seoul').format('YYYYMMDD') -\n            +weather.item[0].baseDate !==\n          0\n        ) {\n          getWeather();\n        } else if (\n          +moment.tz('Asia/Seoul').format('HHmm') - +weather.item[0].baseTime >=\n          140\n        ) {\n          getWeather();\n        }\n      }\n    }\n  }, [position, weather, time, weatherAxios]);\n\n  // 점수\n  useEffect(() => {\n    const scoreAll = [];\n    if (weather) {\n      if (\n        weather.item.filter(item => item.category === 'T1H')[0].obsrValue <=\n          900 &&\n        weather.item.filter(item => item.category === 'T1H')[0].obsrValue >=\n          -900\n      ) {\n        if (\n          weather.item.filter(item => item.category === 'T1H')[0].obsrValue >=\n            16 &&\n          weather.item.filter(item => item.category === 'T1H')[0].obsrValue <=\n            20\n        ) {\n          scoreAll[0] = 100;\n        } else if (\n          weather.item.filter(item => item.category === 'T1H')[0].obsrValue <=\n            40 &&\n          weather.item.filter(item => item.category === 'T1H')[0].obsrValue > 20\n        ) {\n          scoreAll[0] =\n            ((100 -\n              Math.abs(\n                weather.item.filter(item => item.category === 'T1H')[0]\n                  .obsrValue - 20,\n              ) *\n                5) /\n              10) *\n            9;\n          // 최고온도 40도 기준\n        } else if (\n          weather.item.filter(item => item.category === 'T1H')[0].obsrValue <\n            16 &&\n          weather.item.filter(item => item.category === 'T1H')[0].obsrValue >=\n            -34\n        ) {\n          scoreAll[0] =\n            100 -\n            (16 -\n              weather.item.filter(item => item.category === 'T1H')[0]\n                .obsrValue) *\n              2;\n\n          // 최저온도 -34도 기준\n        } else {\n          scoreAll[0] = 0;\n        }\n      } else {\n        scoreAll[0] = 50;\n      }\n      switch (\n        weather.item.filter(item => item.category === 'PTY')[0].obsrValue\n      ) {\n        case 0:\n          scoreAll[1] = 100;\n          break;\n        case 1:\n          scoreAll[1] = 30;\n          break;\n        case 2:\n          scoreAll[1] = 50;\n          break;\n        case 3:\n          scoreAll[1] = 70;\n          break;\n        case 4:\n          scoreAll[1] = 0;\n          break;\n        default:\n          scoreAll[1] = 50;\n          break;\n      }\n      if (\n        weather.item.filter(item => item.category === 'REH')[0].obsrValue >=\n          40 &&\n        weather.item.filter(item => item.category === 'REH')[0].obsrValue <= 70\n      ) {\n        scoreAll[2] = 100;\n      } else if (\n        weather.item.filter(item => item.category === 'REH')[0].obsrValue >=\n          0 &&\n        weather.item.filter(item => item.category === 'REH')[0].obsrValue <= 100\n      ) {\n        scoreAll[2] = 30;\n      } else {\n        scoreAll[2] = 30;\n      }\n    }\n    setScore(scoreAll);\n  }, [weather]);\n  return (\n    <>\n      <header>방구석</header>\n      <div id=\"weatherWrapper\">\n        <WeatherMain weather={weather} score={score} />\n        <WeatherCard weather={weather} score={score} />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport './reset.css';\nimport './App.css';\nimport Weather from './component/Weather';\n\nfunction App() {\n  return (\n    <>\n      <Weather />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}